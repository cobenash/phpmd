name: Generate phar

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  php-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      COMPOSER_NO_INTERACTION: 1

    strategy:
      matrix:
        php: [5.4]
        dependency-version: [prefer-stable]

    name: Release phar

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
          tools: composer:v2

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php }}-${{ matrix.dependency-version }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-${{ matrix.dependency-version }}

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Git submodules
        run: git submodule update --init

      - name: Fix PHP compatibility
        run: php src/phar/compatibility.php

      - name: Decrypt PGP key
        run: openssl aes-256-cbc -K $encrypted_73b85f5c6110_key -iv $encrypted_73b85f5c6110_iv -in src/conf/all.gpg.enc -out all.gpg -d

      - name: Ant
        run: ant package -D-phar:filename=./phpmd.phar && ./phpmd.phar --version

      - name: Sign Phar
        run: gpg --import all.gpg && gpg -u $SIGNING_EMAIL --detach-sign --output ./phpmd.phar.asc ./phpmd.phar

      - name: Archive generated phar
        uses: actions/upload-artifact@v2
        with:
          name: phpmd.phar
          path: |
            phpmd.phar
            phpmd.phar.asc

      - name: Release phpmd.phar
        if: github.event_name == 'release'
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: 'phpmd.phar*'
